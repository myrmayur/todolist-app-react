pipeline {
    agent any

    environment {
        NODE_OPTIONS = '--openssl-legacy-provider'
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'pipeline {
    agent any

    environment {
        NODE_OPTIONS = '--openssl-legacy-provider'
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/myrmayur/my-app.git', branch: 'master'
            }
        }

        stage('Clean Workspace') {
            steps {
                deleteDir() // Clean up the workspace
            }
        }

        stage('Install Dependencies') {
            steps {
                // Install dependencies using npm ci
                sh 'npm ci'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'npm test'
            }
        }

        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }

        stage('Deploy') {
            steps {
                sh 'cp -r build/* /path/to/deploy/directory'
            }
        }
    }

    post {
        success {
            script {
                currentBuild.result = 'SUCCESS'
            }
        }
        failure {
            script {
                currentBuild.result = 'FAILURE'
            }
        }
    }
}
', branch: 'main'
            }
        }

        stage('Clean Workspace') {
            steps {
                deleteDir() // Clean up the workspace
            }
        }

        stage('Install Dependencies') {
            steps {
                // Install dependencies using npm ci
                sh 'npm ci'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'npm test'
            }
        }

        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }

        stage('Deploy') {
            steps {
                sh 'cp -r build/* /path/to/deploy/directory'
            }
        }
    }

    post {
        success {
            script {
                currentBuild.result = 'SUCCESS'
            }
        }
        failure {
            script {
                currentBuild.result = 'FAILURE'
            }
        }
    }
}
